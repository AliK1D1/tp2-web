@model List<Categories>

<h2 class="text-center my-4">Catégories de Poids UFC</h2>

<div class="container">
    <div class="row espace justify-content-between fondombre nohover">
        @foreach (var cat in Model)
        {
           
            var combattants = cat.Combattants ?? new List<tp2.Models.Combattant>();
            var actifs = combattants.Where(c => c.EstActif).ToList();

            var nbCombattants = actifs.Count();
            var totalVictoires = actifs.Sum(c => c.Ratio.Victoires); 
            var totalCombats = actifs.Sum(c => c.Ratio.Victoires + c.Ratio.Defaites + c.Ratio.Nuls); 
            var ratioMoyen = totalCombats > 0 ? actifs.Average(c => (double)c.Ratio.Victoires / totalCombats) : 0;
            var meilleurCombattant = actifs.OrderByDescending(c => c.Ratio.Victoires).FirstOrDefault(); 

            <a href="/Enfant/recherche" class="col-12 col-md-3 col-lg-3 col-xl-3 bordure opacitee textdeco mb-4 text-center text-md-start">
                <h1>@cat.Nom.ToUpper()</h1>
                <img src="@Url.Content(cat.ImageCombattantLegende)" class="img-fluid" alt="@cat.Nom">
                <p>
                    Poids en livres : @cat.Poids <br />
                    Combattants actifs : @nbCombattants <br />
                    Total des victoires : @totalVictoires <br />
                    Ratio moyen des victoires : @Math.Round(ratioMoyen * 100, 2)% <br />
                    Meilleur combattant : @meilleurCombattant?.Nom (avec @meilleurCombattant?.Ratio.Victoires victoires)
                </p>
                <p>@Html.Raw(cat.Description)</p>
            </a>
        }
    </div>
</div>